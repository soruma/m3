name: CI

on: [push, pull_request]

jobs:

  build:
    runs-on: ubuntu-latest

    if: "! contains(github.event.head_commit.message, '[ci skip]')"

    services:
      db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: passwd
        ports:
          - 5432:5432

    container:
      image: ruby:2.7.0
      env:
        POSTGRES_HOST: db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: passwd

    steps:
    - uses: actions/checkout@v1

    - name: Install dependent packages
      run: |
        curl -sL https://deb.nodesource.com/setup_14.x | bash -
        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
        curl -O https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
        apt-get update
        apt-get install -y --no-install-recommends nodejs libpq-dev yarn ./google-chrome-stable_current_amd64.deb

    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          ${{ runner.os }}-gem-

    - name: Install gems
      run: |
        bundle config path vendor/bundle
        bundle config with test
        bundle install --jobs 4 --retry 3

    - name: Get yarn cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(./bin/yarn cache dir)"

    - name: Cache yarn
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys:
          ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          ${{ runner.os }}-yarn-

    - name: Install node modules
      run: ./bin/yarn

    - name: Lint
      run: |
        bundle exec rubocop
        bundle exec slim-lint app/views/

    - name: Setup Database
      run: |
        ./bin/rails db:create
        ./bin/rails db:schema:load
      env:
        RAILS_ENV: test

    - name: Javascript packing
      run: ./bin/webpack

    - name: Spec
      run: ./bin/rspec
      env:
        CI: true
        CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        DISABLE_SPRING: 1

    - name: Security check
      run: bundle exec brakeman -4 -A -w 1 -z
